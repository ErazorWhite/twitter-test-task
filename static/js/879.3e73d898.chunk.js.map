{"version":3,"file":"static/js/879.3e73d898.chunk.js","mappings":"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","sources":["components/PostItem/PostItem.styled.js","components/PostDate/PostDate.jsx","components/PostItem/PostItem.jsx","components/PostsList/PostsList.styled.js","components/SkeletonPost/SkeletonPost.jsx","components/PostsList/PostsList.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/ProfileDetails/ProfileDetails.styled.js","components/ProfileDetails/ProfileDetails.jsx","pages/Profile.jsx","utilities/dateParser.js"],"sourcesContent":["import { styled } from 'styled-components';\nimport cssVar from 'utilities/cssVarGetter';\n\nconst mobilePd = cssVar('--mobile-padding');\nconst tabletPd = cssVar('--tablet-padding');\nconst desktopPd = cssVar('--desktop-padding');\n\nexport const UserName = styled.h2`\n  font-size: 1em;\n`;\n\nexport const Li = styled.li`\n  position: relative;\n  margin: 0 -${mobilePd};\n  padding: 10px ${mobilePd};\n  border-bottom: 1px solid gray;\n\n  &:last-child {\n    border: none;\n  }\n\n  @media (min-width: 768px) {\n    margin: 0 -${tabletPd};\n    padding: 20px ${tabletPd};\n  }\n\n  @media (min-width: 1280px) {\n    margin: 0 -${desktopPd};\n    padding: 30px ${desktopPd};\n  }\n`;\n\nexport const AvatarBox = styled.div`\n  min-height: 40px;\n  height: 40px;\n  min-width: 40px;\n  width: 40px;\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MessageBox = styled.div`\n  padding: 5px;\n`;\n\nexport const Message = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const MessageImgBox = styled.div`\n  max-width: 480px;\n  max-height: 640px;\n  border-radius: 10%;\n  overflow: hidden;\n`;\n\nexport const MessageSplitter = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const MessageTitle = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-bottom: 10px;\n`;\n","import DateParser from \"utilities/dateParser\";\n\nexport const PostDate = ({createdAt}) => {\n  const { day, month, hours, minutes } = DateParser(createdAt);\n\n  return (\n    <>\n      <p>\n        {month} {day}\n      </p>\n      <span>·</span>\n      <p>\n        {hours}:{minutes} UTC\n      </p>\n    </>\n  );\n};\n","import {\n  UserName,\n  AvatarBox,\n  Message,\n  MessageSplitter,\n  Img,\n  MessageBox,\n  MessageTitle,\n  MessageImgBox,\n  Li,\n} from './PostItem.styled';\nimport { PostDate } from 'components/PostDate/PostDate';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPhoto from 'images/img_not_found.jpg';\n\nexport const PostItem = ({\n  postDetails: { author, avatar, image, message, createdAt },\n}) => {\n  const location = useLocation();\n  const accoutAvatar = avatar ? avatar : defaultPhoto;\n  const postImage = image ? image : defaultPhoto;\n\n  return (\n    <Li>\n      <MessageSplitter>\n        <AvatarBox>\n          <Img src={accoutAvatar} alt=\"profile\" width={'40'} height={'40'} />\n        </AvatarBox>\n        <div>\n          <MessageTitle>\n            <Link to={`/profile/${author}`} state={{ from: location }}>\n              <UserName>{author}</UserName>\n            </Link>\n            <span>·</span>\n            <PostDate createdAt={createdAt} />\n          </MessageTitle>\n          <MessageBox>\n            <Message>{message}</Message>\n            <MessageImgBox>\n              <Img\n                src={postImage}\n                alt=\"post visualization\"\n                width={'480'}\n                height={'360'}\n              />\n            </MessageImgBox>\n          </MessageBox>\n        </div>\n      </MessageSplitter>\n    </Li>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import ContentLoader from 'react-content-loader';\nimport { Desktop, Mobile } from 'utilities/DeviceTypeDeterminant';\n\nconst SkeletonPost = props => (\n  <ContentLoader\n    speed={2}\n    width={480}\n    height={360}\n    viewBox=\"0 0 480 360\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <Mobile>\n      <circle cx=\"20\" cy=\"20\" r=\"20\" />\n      <rect x=\"52\" y=\"0\" rx=\"0\" ry=\"0\" width=\"260\" height=\"16\" />\n      <rect x=\"52\" y=\"31\" rx=\"0\" ry=\"0\" width=\"300\" height=\"21\" />\n      <rect x=\"52\" y=\"93\" rx=\"0\" ry=\"0\" width=\"300\" height=\"360\" />\n      <rect x=\"52\" y=\"62\" rx=\"0\" ry=\"0\" width=\"300\" height=\"21\" />\n    </Mobile>\n    <Desktop>\n      <circle cx=\"20\" cy=\"20\" r=\"20\" />\n      <rect x=\"52\" y=\"0\" rx=\"0\" ry=\"0\" width=\"320\" height=\"16\" />\n      <rect x=\"52\" y=\"31\" rx=\"0\" ry=\"0\" width=\"480\" height=\"21\" />\n      <rect x=\"52\" y=\"93\" rx=\"0\" ry=\"0\" width=\"480\" height=\"360\" />\n      <rect x=\"52\" y=\"62\" rx=\"0\" ry=\"0\" width=\"480\" height=\"21\" />\n    </Desktop>\n  </ContentLoader>\n);\n\nexport default SkeletonPost;\n","import { PostItem } from 'components/PostItem/PostItem';\nimport { Ul } from './PostsList.styled';\nimport { Li } from '../PostItem/PostItem.styled';\nimport SkeletonPost from 'components/SkeletonPost/SkeletonPost';\n\nexport const PostsList = ({ posts, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Ul>\n        {Array.from({ length: 10 }).map((_, index) => (\n          <Li key={index}>\n            <SkeletonPost key={index} />\n          </Li>\n        ))}\n      </Ul>\n    );\n  }\n\n  return (\n    <Ul>\n      {posts?.length > 0 &&\n        posts.map(post => <PostItem key={post.messageId} postDetails={post} />)}\n    </Ul>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding-top: 14px;\n  padding-bottom: 20px;\n`;\n\nexport const H1 = styled.h1`\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { StyledSection, H1 } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      {title && <H1>{title}</H1>}\n      <div>{children}</div>\n    </StyledSection>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const BannerThumb = styled.div`\n  width: 100%;\n  height: 200px;\n  margin-bottom: 20px;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 12px;\n`;\n\nexport const AvatarThumb = styled.div`\n  width: 130px;\n  height: 130px;\n  border-radius: 10%;\n  overflow: hidden;\n  position: relative;\n  margin-top: -80px;\n  margin-left: 20px;\n  border: 5px solid black;\n`;\n\nexport const H2 = styled.h2`\n  margin-bottom: 12px;\n`;\n\nexport const DescriptionList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 12px;\n`;\n\nexport const DescriptionItem = styled.li`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const FollowList = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const FollowDigit = styled.span`\n  font-weight: bold;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { TfiLocationPin } from 'react-icons/tfi';\nimport { AiOutlineLink } from 'react-icons/ai';\nimport { BiCalendar } from 'react-icons/bi';\nimport {\n  DescriptionItem,\n  DescriptionList,\n  AvatarThumb,\n  BannerThumb,\n  FollowDigit,\n  FollowList,\n  H2,\n  Text,\n  Img,\n} from './ProfileDetails.styled';\nimport DateParser from 'utilities/dateParser';\nimport { getNewsFeed } from 'api/mockAPI';\nimport { PostsList } from 'components/PostsList/PostsList';\nimport { Section } from 'components/Section/Section';\nimport { useSearchParams } from 'react-router-dom';\nimport defaultPhoto from 'images/img_not_found.jpg';\nimport PropTypes from 'prop-types';\n\nconst ProfileDetails = ({\n  profileDetails: {\n    avatar,\n    banner,\n    city,\n    country,\n    description,\n    followers,\n    following,\n    registeredAt,\n    url,\n    username,\n    userId,\n  },\n}) => {\n  const [posts, setPosts] = useState([]);\n  const [, setIsLoading] = useState(false);\n  const { month, year } = DateParser(registeredAt);\n  const [searchParams] = useSearchParams();\n  const accoutAvatar = avatar ? avatar : defaultPhoto;\n  const accountBanner = banner ? banner : defaultPhoto;\n\n  useEffect(() => {\n    setIsLoading(true);\n    const asyncWrapper = async () => {\n      try {\n        const params = {};\n        params.authorId = userId;\n\n        // Фильтрация\n        for (const [key, value] of searchParams.entries()) {\n          if (value) {\n            params[key] = value;\n          }\n        }\n\n        const posts = await getNewsFeed(params);\n        setPosts(posts);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    asyncWrapper();\n  }, [userId, searchParams]);\n\n  return (\n    <>\n      <Section>\n        <h1>{username}</h1>\n        <Text>TotalMessages</Text>\n        <BannerThumb>\n          <Img src={accountBanner} alt=\"banner\" width={'600'} height={'200'} />\n        </BannerThumb>\n        <AvatarThumb>\n          <Img src={accoutAvatar} alt=\"avatar\" width={'40'} height={'40'} />\n        </AvatarThumb>\n        <H2>{username}</H2>\n        <Text>{description}</Text>\n        <DescriptionList>\n          <DescriptionItem>\n            <TfiLocationPin size={19} />\n            <p>\n              {country}, {city}\n            </p>\n          </DescriptionItem>\n          <DescriptionItem>\n            <AiOutlineLink size={19} />\n            <a href={url}>{url}</a>\n          </DescriptionItem>\n          <DescriptionItem>\n            <BiCalendar size={19} />\n            <p>\n              Joined {month} {year}\n            </p>\n          </DescriptionItem>\n        </DescriptionList>\n        <FollowList>\n          <li>\n            <FollowDigit>{following}</FollowDigit> Following\n          </li>\n          <li>\n            <FollowDigit>{followers}</FollowDigit> Followers\n          </li>\n        </FollowList>\n      </Section>\n      <Section title={'Posts'}>\n        <PostsList posts={posts} />\n      </Section>\n    </>\n  );\n};\n\nProfileDetails.propTypes = {\n  profileDetails: PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    banner: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    country: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    followers: PropTypes.number.isRequired,\n    following: PropTypes.number.isRequired,\n    registeredAt: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    userId: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ProfileDetails;\n","import { useEffect, useState } from 'react';\nimport { Section } from 'components/Section/Section';\nimport { useParams } from 'react-router-dom';\nimport { getProfileDetails } from 'api/mockAPI';\nimport ProfileDetails from 'components/ProfileDetails/ProfileDetails';\nimport LoadingSpinner from 'components/LoadingSpinner/LoadingSpinner';\n\nconst Profile = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [profileDetails, setProfileDetails] = useState({});\n  const { userName } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const asyncWrapper = async () => {\n      try {\n        const profileDetails = await getProfileDetails(userName);\n        setProfileDetails(profileDetails);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    asyncWrapper();\n  }, [userName]);\n\n  return (\n    <Section>\n      {isLoading && <LoadingSpinner isLoading={isLoading} />}\n      {profileDetails && Object.keys(profileDetails).length > 0 ? (\n        <ProfileDetails profileDetails={profileDetails} />\n      ) : (\n        <div>Oops!</div>\n      )}\n    </Section>\n  );\n};\n\nexport default Profile;\n","const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst DateParser = createdAt => {\n  const date = new Date(createdAt);\n  const day = date.getDate(); // Возвращает день месяца от 1 до 31\n  const month = monthNames[date.getMonth()];\n  const year = date.getUTCFullYear(); // Возвращает год (4 цифры)\n  const hours = date.getUTCHours(); // Возвращает часы в UTC (от 0 до 23)\n  const minutes = date.getUTCMinutes().toString().padStart(2, '0'); // Возвращает минуты в UTC (от 0 до 59), добавляет ведущий ноль при необходимости\n  return { day, month, year, hours, minutes };\n};\n\nexport default DateParser;\n"],"names":["mobilePd","cssVar","tabletPd","desktopPd","UserName","styled","h2","_templateObject","_taggedTemplateLiteral","Li","li","_templateObject2","AvatarBox","div","_templateObject3","Img","img","_templateObject4","MessageBox","_templateObject5","Message","p","_templateObject6","MessageImgBox","_templateObject7","MessageSplitter","_templateObject8","MessageTitle","_templateObject9","PostDate","_ref","createdAt","_DateParser","DateParser","day","month","hours","minutes","_jsxs","_Fragment","children","_jsx","PostItem","_ref$postDetails","postDetails","author","avatar","image","message","location","useLocation","accoutAvatar","defaultPhoto","postImage","src","alt","width","height","Link","to","concat","state","from","Ul","ul","props","ContentLoader","_objectSpread","speed","viewBox","backgroundColor","foregroundColor","Mobile","cx","cy","r","x","y","rx","ry","Desktop","PostsList","posts","isLoading","Array","length","map","_","index","SkeletonPost","post","messageId","StyledSection","section","H1","h1","Section","title","BannerThumb","Text","AvatarThumb","H2","DescriptionList","DescriptionItem","FollowList","FollowDigit","span","_ref$profileDetails","profileDetails","banner","city","country","description","followers","following","registeredAt","url","username","userId","_useState","useState","_useState2","_slicedToArray","setPosts","_useState3","setIsLoading","year","_useSearchParams","useSearchParams","searchParams","accountBanner","useEffect","asyncWrapper","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","_iterator","_step","_step$value","key","value","_posts","wrap","_context","prev","next","authorId","_createForOfIteratorHelper","entries","s","n","done","err","e","f","getNewsFeed","sent","t0","console","log","finish","stop","apply","arguments","TfiLocationPin","size","AiOutlineLink","href","BiCalendar","_useState4","setProfileDetails","userName","useParams","_profileDetails","getProfileDetails","LoadingSpinner","Object","keys","ProfileDetails","monthNames","date","Date","getDate","getMonth","getUTCFullYear","getUTCHours","getUTCMinutes","toString","padStart"],"sourceRoot":""}