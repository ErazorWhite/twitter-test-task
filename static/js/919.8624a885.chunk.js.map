{"version":3,"file":"static/js/919.8624a885.chunk.js","mappings":"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","sources":["api/mockAPI.js","components/PostItem/PostItem.styled.js","components/PostDate/PostDate.jsx","components/PostItem/PostItem.jsx","components/PostsList/PostsList.styled.js","components/SkeletonPost/SkeletonPost.jsx","components/PostsList/PostsList.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Posts.jsx","utilities/dateParser.js"],"sourcesContent":["import axios from 'axios';\n\nconst mockAPI = axios.create({\n  baseURL: 'https://murmuring-spire-16258-e111b21c7a09.herokuapp.com/api',\n});\n\nexport const getNewsFeed = async searchParams => {\n  try {\n    const { data } = await mockAPI.get(`/posts`, { params: searchParams });\n    return data;\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n\nexport const getProfileDetails = async id => {\n  try {\n    const { data } = await mockAPI.get(`/users/${id}`);\n    return data[0];\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n","import { styled } from 'styled-components';\nimport cssVar from 'utilities/cssVarGetter';\n\nconst mobilePd = cssVar('--mobile-padding');\nconst tabletPd = cssVar('--tablet-padding');\nconst desktopPd = cssVar('--desktop-padding');\n\nexport const UserName = styled.h2`\n  font-size: 1em;\n`;\n\nexport const Li = styled.li`\n  position: relative;\n  margin: 0 -${mobilePd};\n  padding: 10px ${mobilePd};\n  border-bottom: 1px solid gray;\n\n  &:last-child {\n    border: none;\n  }\n\n  @media (min-width: 768px) {\n    margin: 0 -${tabletPd};\n    padding: 20px ${tabletPd};\n  }\n\n  @media (min-width: 1280px) {\n    margin: 0 -${desktopPd};\n    padding: 30px ${desktopPd};\n  }\n`;\n\nexport const AvatarBox = styled.div`\n  min-height: 40px;\n  height: 40px;\n  min-width: 40px;\n  width: 40px;\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MessageBox = styled.div`\n  padding: 5px;\n`;\n\nexport const Message = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const MessageImgBox = styled.div`\n  max-width: 480px;\n  max-height: 640px;\n  border-radius: 10%;\n  overflow: hidden;\n`;\n\nexport const MessageSplitter = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const MessageTitle = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-bottom: 10px;\n`;\n","import DateParser from \"utilities/dateParser\";\n\nexport const PostDate = ({createdAt}) => {\n  const { day, month, hours, minutes } = DateParser(createdAt);\n\n  return (\n    <>\n      <p>\n        {month} {day}\n      </p>\n      <span>Â·</span>\n      <p>\n        {hours}:{minutes} UTC\n      </p>\n    </>\n  );\n};\n","import {\n  UserName,\n  AvatarBox,\n  Message,\n  MessageSplitter,\n  Img,\n  MessageBox,\n  MessageTitle,\n  MessageImgBox,\n  Li,\n} from './PostItem.styled';\nimport { PostDate } from 'components/PostDate/PostDate';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPhoto from 'images/img_not_found.jpg';\n\nexport const PostItem = ({\n  postDetails: { author, avatar, image, message, createdAt },\n}) => {\n  const location = useLocation();\n  const accoutAvatar = avatar ? avatar : defaultPhoto;\n  const postImage = image ? image : defaultPhoto;\n\n  return (\n    <Li>\n      <MessageSplitter>\n        <AvatarBox>\n          <Img src={accoutAvatar} alt=\"profile\" width={'40'} height={'40'} />\n        </AvatarBox>\n        <div>\n          <MessageTitle>\n            <Link to={`/profile/${author}`} state={{ from: location }}>\n              <UserName>{author}</UserName>\n            </Link>\n            <span>Â·</span>\n            <PostDate createdAt={createdAt} />\n          </MessageTitle>\n          <MessageBox>\n            <Message>{message}</Message>\n            <MessageImgBox>\n              <Img\n                src={postImage}\n                alt=\"post visualization\"\n                width={'480'}\n                height={'360'}\n              />\n            </MessageImgBox>\n          </MessageBox>\n        </div>\n      </MessageSplitter>\n    </Li>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import ContentLoader from 'react-content-loader';\nimport { Desktop, Mobile } from 'utilities/DeviceTypeDeterminant';\n\nconst SkeletonPost = props => (\n  <ContentLoader\n    speed={2}\n    width={480}\n    height={360}\n    viewBox=\"0 0 480 360\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <Mobile>\n      <circle cx=\"20\" cy=\"20\" r=\"20\" />\n      <rect x=\"52\" y=\"0\" rx=\"0\" ry=\"0\" width=\"260\" height=\"16\" />\n      <rect x=\"52\" y=\"31\" rx=\"0\" ry=\"0\" width=\"300\" height=\"21\" />\n      <rect x=\"52\" y=\"93\" rx=\"0\" ry=\"0\" width=\"300\" height=\"360\" />\n      <rect x=\"52\" y=\"62\" rx=\"0\" ry=\"0\" width=\"300\" height=\"21\" />\n    </Mobile>\n    <Desktop>\n      <circle cx=\"20\" cy=\"20\" r=\"20\" />\n      <rect x=\"52\" y=\"0\" rx=\"0\" ry=\"0\" width=\"320\" height=\"16\" />\n      <rect x=\"52\" y=\"31\" rx=\"0\" ry=\"0\" width=\"480\" height=\"21\" />\n      <rect x=\"52\" y=\"93\" rx=\"0\" ry=\"0\" width=\"480\" height=\"360\" />\n      <rect x=\"52\" y=\"62\" rx=\"0\" ry=\"0\" width=\"480\" height=\"21\" />\n    </Desktop>\n  </ContentLoader>\n);\n\nexport default SkeletonPost;\n","import { PostItem } from 'components/PostItem/PostItem';\nimport { Ul } from './PostsList.styled';\nimport { Li } from '../PostItem/PostItem.styled';\nimport SkeletonPost from 'components/SkeletonPost/SkeletonPost';\n\nexport const PostsList = ({ posts, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Ul>\n        {Array.from({ length: 10 }).map((_, index) => (\n          <Li key={index}>\n            <SkeletonPost key={index} />\n          </Li>\n        ))}\n      </Ul>\n    );\n  }\n\n  return (\n    <Ul>\n      {posts?.length > 0 &&\n        posts.map(post => <PostItem key={post.messageId} postDetails={post} />)}\n    </Ul>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding-top: 14px;\n  padding-bottom: 20px;\n`;\n\nexport const H1 = styled.h1`\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { StyledSection, H1 } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      {title && <H1>{title}</H1>}\n      <div>{children}</div>\n    </StyledSection>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import { Section } from 'components/Section/Section';\nimport { useEffect, useState } from 'react';\nimport { getNewsFeed } from 'api/mockAPI';\nimport { PostsList } from 'components/PostsList/PostsList';\nimport { useSearchParams } from 'react-router-dom';\nimport LoadingSpinner from 'components/LoadingSpinner/LoadingSpinner';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const asyncWrapper = async () => {\n      try {\n        const params = {};\n\n        // Ð¤Ð¸Ð»ÑÑÑÐ°ÑÐ¸Ñ\n        for (const [key, value] of searchParams.entries()) {\n          if (value) {\n            params[key] = value;\n          }\n        }\n\n        const posts = await getNewsFeed(params);\n        setPosts(posts);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    asyncWrapper();\n  }, [searchParams]);\n\n  return (\n    <>\n      {isLoading && <LoadingSpinner isLoading={isLoading} />}\n      <Section title=\"Posts\">\n        {<PostsList posts={posts} isLoading={isLoading} />}\n      </Section>\n    </>\n  );\n};\n\nexport default Posts;\n","const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst DateParser = createdAt => {\n  const date = new Date(createdAt);\n  const day = date.getDate(); // ÐÐ¾Ð·Ð²ÑÐ°ÑÐ°ÐµÑ Ð´ÐµÐ½Ñ Ð¼ÐµÑÑÑÐ° Ð¾Ñ 1 Ð´Ð¾ 31\n  const month = monthNames[date.getMonth()];\n  const year = date.getUTCFullYear(); // ÐÐ¾Ð·Ð²ÑÐ°ÑÐ°ÐµÑ Ð³Ð¾Ð´ (4 ÑÐ¸ÑÑÑ)\n  const hours = date.getUTCHours(); // ÐÐ¾Ð·Ð²ÑÐ°ÑÐ°ÐµÑ ÑÐ°ÑÑ Ð² UTC (Ð¾Ñ 0 Ð´Ð¾ 23)\n  const minutes = date.getUTCMinutes().toString().padStart(2, '0'); // ÐÐ¾Ð·Ð²ÑÐ°ÑÐ°ÐµÑ Ð¼Ð¸Ð½ÑÑÑ Ð² UTC (Ð¾Ñ 0 Ð´Ð¾ 59), Ð´Ð¾Ð±Ð°Ð²Ð»ÑÐµÑ Ð²ÐµÐ´ÑÑÐ¸Ð¹ Ð½Ð¾Ð»Ñ Ð¿ÑÐ¸ Ð½ÐµÐ¾Ð±ÑÐ¾Ð´Ð¸Ð¼Ð¾ÑÑÐ¸\n  return { day, month, year, hours, minutes };\n};\n\nexport default DateParser;\n"],"names":["mockAPI","axios","create","baseURL","getNewsFeed","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","searchParams","_yield$mockAPI$get","data","wrap","_context","prev","next","get","params","sent","abrupt","t0","console","log","message","stop","_x","apply","arguments","getProfileDetails","_ref2","_callee2","id","_yield$mockAPI$get2","_context2","concat","_x2","mobilePd","cssVar","tabletPd","desktopPd","UserName","styled","h2","_templateObject","_taggedTemplateLiteral","Li","li","_templateObject2","AvatarBox","div","_templateObject3","Img","img","_templateObject4","MessageBox","_templateObject5","Message","p","_templateObject6","MessageImgBox","_templateObject7","MessageSplitter","_templateObject8","MessageTitle","_templateObject9","PostDate","createdAt","_DateParser","DateParser","day","month","hours","minutes","_jsxs","_Fragment","children","_jsx","PostItem","_ref$postDetails","postDetails","author","avatar","image","location","useLocation","accoutAvatar","defaultPhoto","postImage","src","alt","width","height","Link","to","state","from","Ul","ul","props","ContentLoader","_objectSpread","speed","viewBox","backgroundColor","foregroundColor","Mobile","cx","cy","r","x","y","rx","ry","Desktop","PostsList","posts","isLoading","Array","length","map","_","index","SkeletonPost","post","messageId","StyledSection","section","H1","h1","Section","title","_useState","useState","_useState2","_slicedToArray","setPosts","_useState3","_useState4","setIsLoading","_useSearchParams","useSearchParams","useEffect","asyncWrapper","_iterator","_step","_step$value","key","value","_posts","_createForOfIteratorHelper","entries","s","n","done","err","e","f","finish","LoadingSpinner","monthNames","date","Date","getDate","getMonth","year","getUTCFullYear","getUTCHours","getUTCMinutes","toString","padStart"],"sourceRoot":""}