{"version":3,"file":"static/js/919.e649488d.chunk.js","mappings":"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","sources":["components/PostItem/PostItem.styled.js","components/PostDate/PostDate.jsx","components/PostItem/PostItem.jsx","components/PostsList/PostsList.styled.js","components/SkeletonPost/SkeletonPost.jsx","components/PostsList/PostsList.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Posts.jsx","utilities/dateParser.js","../node_modules/react-content-loader/src/shared/uid.ts","../node_modules/react-content-loader/src/web/Svg.tsx","../node_modules/react-content-loader/src/web/ContentLoader.tsx","../node_modules/react-content-loader/src/web/presets/FacebookStyle.tsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport cssVar from 'utilities/cssVarGetter';\n\nconst mobilePd = cssVar('--mobile-padding');\nconst tabletPd = cssVar('--tablet-padding');\nconst desktopPd = cssVar('--desktop-padding');\n\nexport const UserName = styled.h2`\n  font-size: 1em;\n`;\n\nexport const Li = styled.li`\n  position: relative;\n  margin: 0 -${mobilePd};\n  padding: 10px ${mobilePd};\n  border-bottom: 1px solid gray;\n\n  &:last-child {\n    border: none;\n  }\n\n  @media (min-width: 768px) {\n    margin: 0 -${tabletPd};\n    padding: 20px ${tabletPd};\n  }\n\n  @media (min-width: 1280px) {\n    margin: 0 -${desktopPd};\n    padding: 30px ${desktopPd};\n  }\n`;\n\nexport const AvatarBox = styled.div`\n  min-height: 40px;\n  height: 40px;\n  min-width: 40px;\n  width: 40px;\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MessageBox = styled.div`\n  padding: 5px;\n`;\n\nexport const Message = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const MessageImgBox = styled.div`\n  max-width: 480px;\n  max-height: 640px;\n  border-radius: 10%;\n  overflow: hidden;\n`;\n\nexport const MessageSplitter = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const MessageTitle = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-bottom: 10px;\n`;\n","import DateParser from \"utilities/dateParser\";\n\nexport const PostDate = ({createdAt}) => {\n  const { day, month, hours, minutes } = DateParser(createdAt);\n\n  return (\n    <>\n      <p>\n        {month} {day}\n      </p>\n      <span>·</span>\n      <p>\n        {hours}:{minutes} UTC\n      </p>\n    </>\n  );\n};\n","import {\n  UserName,\n  AvatarBox,\n  Message,\n  MessageSplitter,\n  Img,\n  MessageBox,\n  MessageTitle,\n  MessageImgBox,\n  Li,\n} from './PostItem.styled';\nimport { PostDate } from 'components/PostDate/PostDate';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPhoto from 'images/img_not_found.jpg';\n\nexport const PostItem = ({\n  postDetails: { author, avatar, image, message, createdAt },\n}) => {\n  const location = useLocation();\n  const accoutAvatar = avatar ? avatar : defaultPhoto;\n  const postImage = image ? image : defaultPhoto;\n\n  return (\n    <Li>\n      <MessageSplitter>\n        <AvatarBox>\n          <Img src={accoutAvatar} alt=\"profile\" width={'40'} height={'40'} />\n        </AvatarBox>\n        <div>\n          <MessageTitle>\n            <Link to={`/profile/${author}`} state={{ from: location }}>\n              <UserName>{author}</UserName>\n            </Link>\n            <span>·</span>\n            <PostDate createdAt={createdAt} />\n          </MessageTitle>\n          <MessageBox>\n            <Message>{message}</Message>\n            <MessageImgBox>\n              <Img\n                src={postImage}\n                alt=\"post visualization\"\n                width={'480'}\n                height={'360'}\n              />\n            </MessageImgBox>\n          </MessageBox>\n        </div>\n      </MessageSplitter>\n    </Li>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import ContentLoader from 'react-content-loader';\nimport { Desktop, Mobile } from 'utilities/DeviceTypeDeterminant';\n\nconst SkeletonPost = props => (\n  <ContentLoader\n    speed={2}\n    width={480}\n    height={360}\n    viewBox=\"0 0 480 360\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <Mobile>\n      <circle cx=\"20\" cy=\"20\" r=\"20\" />\n      <rect x=\"52\" y=\"0\" rx=\"0\" ry=\"0\" width=\"260\" height=\"16\" />\n      <rect x=\"52\" y=\"31\" rx=\"0\" ry=\"0\" width=\"300\" height=\"21\" />\n      <rect x=\"52\" y=\"93\" rx=\"0\" ry=\"0\" width=\"300\" height=\"360\" />\n      <rect x=\"52\" y=\"62\" rx=\"0\" ry=\"0\" width=\"300\" height=\"21\" />\n    </Mobile>\n    <Desktop>\n      <circle cx=\"20\" cy=\"20\" r=\"20\" />\n      <rect x=\"52\" y=\"0\" rx=\"0\" ry=\"0\" width=\"320\" height=\"16\" />\n      <rect x=\"52\" y=\"31\" rx=\"0\" ry=\"0\" width=\"480\" height=\"21\" />\n      <rect x=\"52\" y=\"93\" rx=\"0\" ry=\"0\" width=\"480\" height=\"360\" />\n      <rect x=\"52\" y=\"62\" rx=\"0\" ry=\"0\" width=\"480\" height=\"21\" />\n    </Desktop>\n  </ContentLoader>\n);\n\nexport default SkeletonPost;\n","import { PostItem } from 'components/PostItem/PostItem';\nimport { Ul } from './PostsList.styled';\nimport { Li } from '../PostItem/PostItem.styled';\nimport SkeletonPost from 'components/SkeletonPost/SkeletonPost';\n\nexport const PostsList = ({ posts, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Ul>\n        {Array.from({ length: 10 }).map((_, index) => (\n          <Li key={index}>\n            <SkeletonPost key={index} />\n          </Li>\n        ))}\n      </Ul>\n    );\n  }\n\n  return (\n    <Ul>\n      {posts?.length > 0 &&\n        posts.map(post => <PostItem key={post.messageId} postDetails={post} />)}\n    </Ul>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding-top: 14px;\n  padding-bottom: 20px;\n`;\n\nexport const H1 = styled.h1`\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { StyledSection, H1 } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      {title && <H1>{title}</H1>}\n      <div>{children}</div>\n    </StyledSection>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import { Section } from 'components/Section/Section';\nimport { useEffect, useState } from 'react';\nimport { getNewsFeed } from 'api/mockAPI';\nimport { PostsList } from 'components/PostsList/PostsList';\nimport { useSearchParams } from 'react-router-dom';\nimport LoadingSpinner from 'components/LoadingSpinner/LoadingSpinner';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const asyncWrapper = async () => {\n      try {\n        const params = {};\n\n        // Фильтрация\n        for (const [key, value] of searchParams.entries()) {\n          if (value) {\n            params[key] = value;\n          }\n        }\n\n        const posts = await getNewsFeed(params);\n        setPosts(posts);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    asyncWrapper();\n  }, [searchParams]);\n\n  return (\n    <>\n      {isLoading && <LoadingSpinner isLoading={isLoading} />}\n      <Section title=\"Posts\">\n        {<PostsList posts={posts} isLoading={isLoading} />}\n      </Section>\n    </>\n  );\n};\n\nexport default Posts;\n","const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst DateParser = createdAt => {\n  const date = new Date(createdAt);\n  const day = date.getDate(); // Возвращает день месяца от 1 до 31\n  const month = monthNames[date.getMonth()];\n  const year = date.getUTCFullYear(); // Возвращает год (4 цифры)\n  const hours = date.getUTCHours(); // Возвращает часы в UTC (от 0 до 23)\n  const minutes = date.getUTCMinutes().toString().padStart(2, '0'); // Возвращает минуты в UTC (от 0 до 59), добавляет ведущий ноль при необходимости\n  return { day, month, year, hours, minutes };\n};\n\nexport default DateParser;\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate = true,\n  animateBegin,\n  backgroundColor = '#f5f6f7',\n  backgroundOpacity = 1,\n  baseUrl = '',\n  children,\n  foregroundColor = '#eee',\n  foregroundOpacity = 1,\n  gradientRatio = 2,\n  gradientDirection = 'left-right',\n  uniqueKey,\n  interval = 0.25,\n  rtl = false,\n  speed = 1.2,\n  style = {},\n  title = 'Loading...',\n  beforeMask = null,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n  const gradientTransform =\n    gradientDirection === 'top-bottom' ? 'rotate(90)' : undefined\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      {beforeMask && React.isValidElement(beforeMask) ? beforeMask : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient} gradientTransform={gradientTransform}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n"],"names":["mobilePd","cssVar","tabletPd","desktopPd","UserName","styled","h2","_templateObject","_taggedTemplateLiteral","Li","li","_templateObject2","AvatarBox","div","_templateObject3","Img","img","_templateObject4","MessageBox","_templateObject5","Message","p","_templateObject6","MessageImgBox","_templateObject7","MessageSplitter","_templateObject8","MessageTitle","_templateObject9","PostDate","_ref","createdAt","_DateParser","DateParser","day","month","hours","minutes","_jsxs","_Fragment","children","_jsx","PostItem","_ref$postDetails","postDetails","author","avatar","image","message","location","useLocation","accoutAvatar","defaultPhoto","postImage","src","alt","width","height","Link","to","concat","state","from","Ul","ul","props","ContentLoader","_objectSpread","speed","viewBox","backgroundColor","foregroundColor","Mobile","cx","cy","r","x","y","rx","ry","Desktop","PostsList","posts","isLoading","Array","length","map","_","index","SkeletonPost","post","messageId","StyledSection","section","H1","h1","Section","title","_useState","useState","_useState2","_slicedToArray","setPosts","_useState3","_useState4","setIsLoading","_useSearchParams","useSearchParams","searchParams","useEffect","asyncWrapper","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","_iterator","_step","_step$value","key","value","_posts","wrap","_context","prev","next","_createForOfIteratorHelper","entries","s","n","done","err","e","f","getNewsFeed","sent","t0","console","log","finish","stop","apply","arguments","LoadingSpinner","monthNames","date","Date","getDate","getMonth","year","getUTCFullYear","getUTCHours","getUTCMinutes","toString","padStart","SVG","_a","_b","animate","animateBegin","_c","_d","backgroundOpacity","_e","baseUrl","_f","_g","foregroundOpacity","_h","gradientRatio","_j","gradientDirection","uniqueKey","_k","interval","_l","rtl","_m","_o","style","_p","_q","beforeMask","__rest","fixedId","Math","random","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","createElement","__assign","role","id","isValidElement","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","begin","ReactContentLoaderFacebook"],"sourceRoot":""}