{"version":3,"file":"static/js/879.5dbc6cd7.chunk.js","mappings":"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","sources":["api/mockAPI.js","components/Backdrop/Backdrop.styled.js","components/Backdrop/Backdrop.jsx","components/PostItem/PostItem.styled.js","components/PostDate/PostDate.jsx","components/PostItem/PostItem.jsx","components/PostsList/PostsList.styled.js","components/PostsList/PostsList.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/ProfileDetails/ProfileDetails.styled.js","components/ProfileDetails/ProfileDetails.jsx","pages/Profile.jsx","utilities/dateParser.js"],"sourcesContent":["import axios from 'axios';\n\nconst mockAPI = axios.create({\n  baseURL: 'https://murmuring-spire-16258-e111b21c7a09.herokuapp.com/api',\n});\n\nexport const getNewsFeed = async searchParams => {\n  try {\n    const { data } = await mockAPI.get(`/posts`, { params: searchParams });\n    return data;\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n\nexport const getProfileDetails = async id => {\n  try {\n    const { data } = await mockAPI.get(`/users/${id}`);\n    return data[0];\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n","import { styled } from 'styled-components';\nimport { MutatingDots } from 'react-loader-spinner';\n\nexport const BackdropContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const CenteredMutatingDots = styled(MutatingDots)`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const LoaderContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BackdropContainer, CenteredMutatingDots, LoaderContainer } from './Backdrop.styled';\n\nconst Loader = () => (\n  <CenteredMutatingDots\n    height=\"100\"\n    width=\"100\"\n    color=\"#4fa94d\"\n    secondaryColor=\"#4fa94d\"\n    radius=\"12.5\"\n    ariaLabel=\"mutating-dots-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"\"\n    visible={true}\n  />\n);\nconst Backdrop = () => <BackdropContainer/>;\n\nconst LoadingPortal = ({ isLoading }) => {\n  const portalRoot = document.getElementById('popup-root');\n\n  return (\n    isLoading &&\n    ReactDOM.createPortal(\n      <>\n        <Backdrop />\n        <LoaderContainer>\n          <Loader />\n        </LoaderContainer>\n      </>,\n      portalRoot\n    )\n  );\n};\n\nexport default LoadingPortal;\n","import { styled } from 'styled-components';\nimport cssVar from 'utilities/cssVarGetter';\n\nconst mobilePd = cssVar('--mobile-padding');\nconst tabletPd = cssVar('--tablet-padding');\nconst desktopPd = cssVar('--desktop-padding');\n\nexport const UserName = styled.h2`\n  font-size: 1em;\n`;\n\nexport const Li = styled.li`\n  position: relative;\n  margin: 0 -${mobilePd};\n  padding: 10px ${mobilePd};\n  border-bottom: 1px solid gray;\n\n  &:last-child {\n    border: none;\n  }\n\n  @media (min-width: 768px) {\n    margin: 0 -${tabletPd};\n    padding: 20px ${tabletPd};\n  }\n\n  @media (min-width: 1280px) {\n    margin: 0 -${desktopPd};\n    padding: 30px ${desktopPd};\n  }\n`;\n\nexport const AvatarBox = styled.div`\n  min-height: 40px;\n  height: 40px;\n  min-width: 40px;\n  width: 40px;\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MessageBox = styled.div`\n  padding: 5px;\n`;\n\nexport const Message = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const MessageImgBox = styled.div`\n  max-width: 480px;\n  max-height: 640px;\n  border-radius: 10%;\n  overflow: hidden;\n`;\n\nexport const MessageSplitter = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const MessageTitle = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-bottom: 10px;\n`;\n","import DateParser from \"utilities/dateParser\";\n\nexport const PostDate = ({createdAt}) => {\n  const { day, month, hours, minutes } = DateParser(createdAt);\n\n  return (\n    <>\n      <p>\n        {month} {day}\n      </p>\n      <span>·</span>\n      <p>\n        {hours}:{minutes} UTC\n      </p>\n    </>\n  );\n};\n","import {\n  UserName,\n  AvatarBox,\n  Message,\n  MessageSplitter,\n  Img,\n  MessageBox,\n  MessageTitle,\n  MessageImgBox,\n  Li,\n} from './PostItem.styled';\nimport { PostDate } from 'components/PostDate/PostDate';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPhoto from 'images/img_not_found.jpg';\n\nexport const PostItem = ({\n  postDetails: { author, avatar, image, message, createdAt },\n}) => {\n  const location = useLocation();\n  const accoutAvatar = avatar ? avatar : defaultPhoto;\n  const postImage = image ? image : defaultPhoto;\n\n  return (\n    <Li>\n      <MessageSplitter>\n        <AvatarBox>\n          <Img src={accoutAvatar} alt=\"profile\" width={'40'} height={'40'} />\n        </AvatarBox>\n        <div>\n          <MessageTitle>\n            <Link to={`/profile/${author}`} state={{ from: location }}>\n              <UserName>{author}</UserName>\n            </Link>\n            <span>·</span>\n            <PostDate createdAt={createdAt} />\n          </MessageTitle>\n          <MessageBox>\n            <Message>{message}</Message>\n            <MessageImgBox>\n              <Img\n                src={postImage}\n                alt=\"post visualization\"\n                width={'480'}\n                height={'640'}\n              />\n            </MessageImgBox>\n          </MessageBox>\n        </div>\n      </MessageSplitter>\n    </Li>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import { PostItem } from 'components/PostItem/PostItem';\nimport { Ul } from './PostsList.styled';\n\nexport const PostsList = ({ posts }) => {\n  return (\n    <Ul>\n      {posts &&\n        posts.map(post => <PostItem key={post.messageId} postDetails={post} />)}\n    </Ul>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding-top: 14px;\n  padding-bottom: 20px;\n`;\n\nexport const H1 = styled.h1`\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { StyledSection, H1 } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      {title && <H1>{title}</H1>}\n      <div>{children}</div>\n    </StyledSection>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const BannerThumb = styled.div`\n  width: 100%;\n  height: 200px;\n  margin-bottom: 20px;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 12px;\n`;\n\nexport const AvatarThumb = styled.div`\n  width: 130px;\n  height: 130px;\n  border-radius: 10%;\n  overflow: hidden;\n  position: relative;\n  margin-top: -80px;\n  margin-left: 20px;\n  border: 5px solid black;\n`;\n\nexport const H2 = styled.h2`\n  margin-bottom: 12px;\n`;\n\nexport const AdditionalDescriptionList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 12px;\n`;\n\nexport const AdditionalDescriptionItem = styled.li`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const FollowList = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const FollowDigit = styled.span`\n  font-weight: bold;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { TfiLocationPin } from 'react-icons/tfi';\nimport { AiOutlineLink } from 'react-icons/ai';\nimport { BiCalendar } from 'react-icons/bi';\nimport {\n  AdditionalDescriptionItem,\n  AdditionalDescriptionList,\n  AvatarThumb,\n  BannerThumb,\n  FollowDigit,\n  FollowList,\n  H2,\n  Text,\n  Img,\n} from './ProfileDetails.styled';\nimport DateParser from 'utilities/dateParser';\nimport { getNewsFeed } from 'api/mockAPI';\nimport { PostsList } from 'components/PostsList/PostsList';\nimport { Section } from 'components/Section/Section';\nimport { useSearchParams } from 'react-router-dom';\nimport defaultPhoto from 'images/img_not_found.jpg';\nimport LoadingPortal from 'components/Backdrop/Backdrop';\n\nconst ProfileDetails = ({\n  profileDetails: {\n    avatar,\n    banner,\n    city,\n    country,\n    description,\n    followers,\n    following,\n    registeredAt,\n    url,\n    username,\n    userId,\n  },\n}) => {\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { month, year } = DateParser(registeredAt);\n  const [searchParams] = useSearchParams();\n  const accoutAvatar = avatar ? avatar : defaultPhoto;\n  const accountBanner = banner ? banner : defaultPhoto;\n\n  useEffect(() => {\n    setIsLoading(true);\n    const asyncWrapper = async () => {\n      try {\n        const params = {};\n        params.authorId = userId;\n\n        // Фильтрация\n        for (const [key, value] of searchParams.entries()) {\n          if (value) {\n            params[key] = value;\n          }\n        }\n\n        const posts = await getNewsFeed(params);\n        setPosts(posts);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    asyncWrapper();\n  }, [userId, searchParams]);\n\n  return (\n    <>\n      {true && <LoadingPortal isLoading={isLoading} />}\n      <h1>{username}</h1>\n      <Text>TotalMessages</Text>\n      <BannerThumb>\n        <Img src={accountBanner} alt=\"banner\" width={'600'} height={'200'} />\n      </BannerThumb>\n      <AvatarThumb>\n        <Img src={accoutAvatar} alt=\"avatar\" width={'40'} height={'40'} />\n      </AvatarThumb>\n      <H2>{username}</H2>\n      <Text>{description}</Text>\n      <AdditionalDescriptionList>\n        <AdditionalDescriptionItem>\n          <TfiLocationPin size={19} />\n          <p>\n            {country}, {city}\n          </p>\n        </AdditionalDescriptionItem>\n        <AdditionalDescriptionItem>\n          <AiOutlineLink size={19} />\n          <a href={url}>{url}</a>\n        </AdditionalDescriptionItem>\n        <AdditionalDescriptionItem>\n          <BiCalendar size={19} />\n          <p>\n            Joined {month} {year}\n          </p>\n        </AdditionalDescriptionItem>\n      </AdditionalDescriptionList>\n      <FollowList>\n        <li>\n          <FollowDigit>{following}</FollowDigit> Following\n        </li>\n        <li>\n          <FollowDigit>{followers}</FollowDigit> Followers\n        </li>\n      </FollowList>\n      <Section>\n        <PostsList posts={posts} />\n      </Section>\n    </>\n  );\n};\n\nexport default ProfileDetails;\n","import { useEffect, useState } from 'react';\nimport { Section } from 'components/Section/Section';\nimport { useParams } from 'react-router-dom';\nimport { getProfileDetails } from 'api/mockAPI';\nimport ProfileDetails from 'components/ProfileDetails/ProfileDetails';\nimport LoadingPortal from 'components/Backdrop/Backdrop';\n\nconst Profile = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [profileDetails, setProfileDetails] = useState({});\n  const { userName } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const asyncWrapper = async () => {\n      try {\n        const profileDetails = await getProfileDetails(userName);\n        setProfileDetails(profileDetails);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    asyncWrapper();\n  }, [userName]);\n\n  return (\n    <Section>\n      {true && <LoadingPortal isLoading={isLoading} />}\n      {profileDetails ? (\n        <ProfileDetails profileDetails={profileDetails} />\n      ) : (\n        <div>Oops!</div>\n      )}\n    </Section>\n  );\n};\n\nexport default Profile;\n","const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst DateParser = createdAt => {\n  const date = new Date(createdAt);\n  const day = date.getDate(); // Возвращает день месяца от 1 до 31\n  const month = monthNames[date.getMonth()];\n  const year = date.getUTCFullYear(); // Возвращает год (4 цифры)\n  const hours = date.getUTCHours(); // Возвращает часы в UTC (от 0 до 23)\n  const minutes = date.getUTCMinutes().toString().padStart(2, '0'); // Возвращает минуты в UTC (от 0 до 59), добавляет ведущий ноль при необходимости\n  return { day, month, year, hours, minutes };\n};\n\nexport default DateParser;\n"],"names":["mockAPI","axios","create","baseURL","getNewsFeed","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","searchParams","_yield$mockAPI$get","data","wrap","_context","prev","next","get","params","sent","abrupt","t0","console","log","message","stop","_x","apply","arguments","getProfileDetails","_ref2","_callee2","id","_yield$mockAPI$get2","_context2","concat","_x2","BackdropContainer","styled","div","_templateObject","_taggedTemplateLiteral","CenteredMutatingDots","MutatingDots","_templateObject2","LoaderContainer","_templateObject3","Loader","_jsx","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","Backdrop","isLoading","portalRoot","document","getElementById","ReactDOM","_jsxs","_Fragment","children","mobilePd","cssVar","tabletPd","desktopPd","UserName","h2","Li","li","AvatarBox","Img","img","_templateObject4","MessageBox","_templateObject5","Message","p","_templateObject6","MessageImgBox","_templateObject7","MessageSplitter","_templateObject8","MessageTitle","_templateObject9","PostDate","createdAt","_DateParser","DateParser","day","month","hours","minutes","PostItem","_ref$postDetails","postDetails","author","avatar","image","location","useLocation","accoutAvatar","defaultPhoto","postImage","src","alt","Link","to","state","from","Ul","ul","PostsList","posts","map","post","messageId","StyledSection","section","H1","h1","Section","title","BannerThumb","Text","AvatarThumb","H2","AdditionalDescriptionList","AdditionalDescriptionItem","FollowList","FollowDigit","span","_ref$profileDetails","profileDetails","banner","city","country","description","followers","following","registeredAt","url","username","userId","_useState","useState","_useState2","_slicedToArray","setPosts","_useState3","_useState4","setIsLoading","year","_useSearchParams","useSearchParams","accountBanner","useEffect","asyncWrapper","_iterator","_step","_step$value","key","value","_posts","authorId","_createForOfIteratorHelper","entries","s","n","done","err","e","f","finish","LoadingPortal","TfiLocationPin","size","AiOutlineLink","href","BiCalendar","setProfileDetails","userName","useParams","_profileDetails","ProfileDetails","monthNames","date","Date","getDate","getMonth","getUTCFullYear","getUTCHours","getUTCMinutes","toString","padStart"],"sourceRoot":""}