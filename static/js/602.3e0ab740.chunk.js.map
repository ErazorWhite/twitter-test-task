{"version":3,"file":"static/js/602.3e0ab740.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/PostItem/PostItem.styled.js","components/PostDate/PostDate.jsx","components/PostItem/PostItem.jsx","components/PostsList/PostsList.styled.js","components/SkeletonPost/SkeletonPost.jsx","components/PostsList/PostsList.jsx","pages/Posts.jsx","utilities/parseDateTime.js","../node_modules/react-content-loader/src/shared/uid.ts","../node_modules/react-content-loader/src/web/Svg.tsx","../node_modules/react-content-loader/src/web/ContentLoader.tsx","../node_modules/react-content-loader/src/web/presets/FacebookStyle.tsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding-top: 14px;\n  padding-bottom: 20px;\n`;\n\nexport const H1 = styled.h1`\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { StyledSection, H1 } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      {title && <H1>{title}</H1>}\n      <div>{children}</div>\n    </StyledSection>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import { styled } from 'styled-components';\nimport cssVar from 'utilities/cssVarGetter';\n\nconst mobilePd = cssVar('--mobile-padding');\nconst tabletPd = cssVar('--tablet-padding');\nconst desktopPd = cssVar('--desktop-padding');\n\nexport const UserName = styled.h2`\n  font-size: 1em;\n`;\n\nexport const Li = styled.li`\n  position: relative;\n  margin: 0 -${mobilePd};\n  padding: 10px ${mobilePd};\n  border-bottom: 1px solid gray;\n\n  &:last-child {\n    border: none;\n  }\n\n  @media (min-width: 768px) {\n    margin: 0 -${tabletPd};\n    padding: 20px ${tabletPd};\n  }\n\n  @media (min-width: 1280px) {\n    margin: 0 -${desktopPd};\n    padding: 30px ${desktopPd};\n  }\n`;\n\nexport const AvatarBox = styled.div`\n  min-height: 40px;\n  height: 40px;\n  min-width: 40px;\n  width: 40px;\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MessageBox = styled.div`\n  padding: 5px;\n`;\n\nexport const Message = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const MessageImgBox = styled.div`\n  max-width: 480px;\n  max-height: 640px;\n  border-radius: 10%;\n  overflow: hidden;\n`;\n\nexport const MessageSplitter = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const MessageTitle = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-bottom: 10px;\n`;\n","import {parseDateTime} from 'utilities/parseDateTime';\n\nexport const PostDate = ({ createdAt }) => {\n  const { day, month, hour, minute } = parseDateTime(createdAt);\n\n  return (\n    <>\n      <p>\n        {month} {day}\n      </p>\n      <span>·</span>\n      <p>\n        {hour}:{minute} UTC\n      </p>\n    </>\n  );\n};\n","import {\n  UserName,\n  AvatarBox,\n  Message,\n  MessageSplitter,\n  Img,\n  MessageBox,\n  MessageTitle,\n  MessageImgBox,\n  Li,\n} from './PostItem.styled';\nimport { PostDate } from 'components/PostDate/PostDate';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPhoto from 'images/img_not_found.jpg';\n\nexport const PostItem = ({\n  postDetails: { author, avatar, image, message, createdAt },\n}) => {\n  const location = useLocation();\n  const accoutAvatar = avatar ? avatar : defaultPhoto;\n  const postImage = image ? image : defaultPhoto;\n\n  return (\n    <Li>\n      <MessageSplitter>\n        <AvatarBox>\n          <Img src={accoutAvatar} alt=\"profile\" width={'40'} height={'40'} />\n        </AvatarBox>\n        <div>\n          <MessageTitle>\n            <Link\n              to={`/profile/${author}`}\n              state={{ from: location }}\n            >\n              <UserName>{author}</UserName>\n            </Link>\n            <span>·</span>\n            <PostDate createdAt={createdAt} />\n          </MessageTitle>\n          <MessageBox>\n            <Message>{message}</Message>\n            <MessageImgBox>\n              <Img\n                src={postImage}\n                alt=\"post visualization\"\n                width={'480'}\n                height={'360'}\n              />\n            </MessageImgBox>\n          </MessageBox>\n        </div>\n      </MessageSplitter>\n    </Li>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import ContentLoader from 'react-content-loader';\nimport { Desktop, Mobile } from 'utilities/DeviceTypeDeterminant';\n\nconst SkeletonPost = props => (\n  <ContentLoader\n    speed={2}\n    width={480}\n    height={360}\n    viewBox=\"0 0 480 360\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <Mobile>\n      <circle cx=\"20\" cy=\"20\" r=\"20\" />\n      <rect x=\"52\" y=\"0\" rx=\"0\" ry=\"0\" width=\"260\" height=\"16\" />\n      <rect x=\"52\" y=\"31\" rx=\"0\" ry=\"0\" width=\"300\" height=\"21\" />\n      <rect x=\"52\" y=\"93\" rx=\"0\" ry=\"0\" width=\"300\" height=\"360\" />\n      <rect x=\"52\" y=\"62\" rx=\"0\" ry=\"0\" width=\"300\" height=\"21\" />\n    </Mobile>\n    <Desktop>\n      <circle cx=\"20\" cy=\"20\" r=\"20\" />\n      <rect x=\"52\" y=\"0\" rx=\"0\" ry=\"0\" width=\"320\" height=\"16\" />\n      <rect x=\"52\" y=\"31\" rx=\"0\" ry=\"0\" width=\"480\" height=\"21\" />\n      <rect x=\"52\" y=\"93\" rx=\"0\" ry=\"0\" width=\"480\" height=\"360\" />\n      <rect x=\"52\" y=\"62\" rx=\"0\" ry=\"0\" width=\"480\" height=\"21\" />\n    </Desktop>\n  </ContentLoader>\n);\n\nexport default SkeletonPost;\n","import { PostItem } from 'components/PostItem/PostItem';\nimport { Ul } from './PostsList.styled';\nimport { Li } from '../PostItem/PostItem.styled';\nimport SkeletonPost from 'components/SkeletonPost/SkeletonPost';\n\nexport const PostsList = ({ posts, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Ul>\n        {Array.from({ length: 5 }).map((_, index) => (\n          <Li key={index}>\n            <SkeletonPost key={index} />\n          </Li>\n        ))}\n      </Ul>\n    );\n  }\n\n  return (\n    <Ul>\n      {posts?.length > 0 ? (\n        posts.map(post => <PostItem key={post.messageId} postDetails={post} />)\n      ) : (\n        <h3>We didn't find any posts.</h3>\n      )}\n    </Ul>\n  );\n};\n","import { Section } from 'components/Section/Section';\nimport { useContext, useEffect, useState } from 'react';\nimport { getNewsFeed } from 'api/mockAPI';\nimport { PostsList } from 'components/PostsList/PostsList';\nimport { useSearchParams } from 'react-router-dom';\nimport LoadingSpinner from 'components/LoadingSpinner/LoadingSpinner';\nimport { PostsContext } from 'Layout/Layout';\nimport { usePaginationParams } from 'hooks/usePaginationParams';\nimport PropTypes from 'prop-types';\n\nconst Posts = ({ authorId }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { setTotalPosts, localPosts, setLocalPosts } = useContext(PostsContext);\n  const [searchParams] = useSearchParams();\n  const [{ page, limit }] = usePaginationParams();\n\n  useEffect(() => {\n\n    setIsLoading(true);\n\n    const asyncWrapper = async () => {\n      try {\n        // Пагинация\n        const params = {\n          _page: page,\n          _limit: limit,\n        };\n\n        // Фильтрация\n        for (const [key, value] of searchParams.entries()) {\n          if (value) {\n            params[key] = value;\n          }\n        }\n\n        if (authorId) params.authorId = authorId;\n\n        const { data, headers } = await getNewsFeed(params);\n        setTotalPosts(headers['x-total-count']);\n        setLocalPosts(data)\n        // setPosts(data);\n      } catch (e) {\n        console.error(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    asyncWrapper();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authorId, searchParams]);\n\n  return (\n    <>\n      {isLoading && <LoadingSpinner isLoading={isLoading} />}\n      <Section title=\"Posts\">\n        {<PostsList posts={localPosts} isLoading={isLoading} />}\n      </Section>\n    </>\n  );\n};\n\nPosts.propTypes = {\n  authorId: PropTypes.string,\n};\n\nexport default Posts;\n","\nlet formatterInstance;\nconst dateOptions = {\n  day: 'numeric',\n  month: 'long',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit',\n  hour12: false,\n  timeZone: 'UTC',\n};\n\nfunction getFormatter() {\n  if (!formatterInstance) {\n    formatterInstance = new Intl.DateTimeFormat('en-US', dateOptions);\n  }\n  return formatterInstance;\n}\n\n\nexport const parseDateTime = createdAt => {\n  const date = new Date(createdAt);\n  const parts = getFormatter().formatToParts(date);\n  const result = parts.reduce((result, { type, value }) => ({ ...result, [type]: value }), {});\n\n  return result;\n};\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate = true,\n  animateBegin,\n  backgroundColor = '#f5f6f7',\n  backgroundOpacity = 1,\n  baseUrl = '',\n  children,\n  foregroundColor = '#eee',\n  foregroundOpacity = 1,\n  gradientRatio = 2,\n  gradientDirection = 'left-right',\n  uniqueKey,\n  interval = 0.25,\n  rtl = false,\n  speed = 1.2,\n  style = {},\n  title = 'Loading...',\n  beforeMask = null,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n  const gradientTransform =\n    gradientDirection === 'top-bottom' ? 'rotate(90)' : undefined\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      {beforeMask && React.isValidElement(beforeMask) ? beforeMask : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient} gradientTransform={gradientTransform}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n"],"names":["StyledSection","styled","section","_templateObject","_taggedTemplateLiteral","H1","h1","_templateObject2","Section","_ref","title","children","_jsxs","_jsx","mobilePd","cssVar","tabletPd","desktopPd","UserName","h2","Li","li","AvatarBox","div","_templateObject3","Img","img","_templateObject4","MessageBox","_templateObject5","Message","p","_templateObject6","MessageImgBox","_templateObject7","MessageSplitter","_templateObject8","MessageTitle","_templateObject9","PostDate","createdAt","_parseDateTime","parseDateTime","day","month","hour","minute","_Fragment","PostItem","_ref$postDetails","postDetails","author","avatar","image","message","location","useLocation","accoutAvatar","defaultPhoto","postImage","src","alt","width","height","Link","to","concat","state","from","Ul","ul","props","ContentLoader","_objectSpread","speed","viewBox","backgroundColor","foregroundColor","Mobile","cx","cy","r","x","y","rx","ry","Desktop","PostsList","posts","isLoading","Array","length","map","_","index","SkeletonPost","post","messageId","authorId","_useState","useState","_useState2","_slicedToArray","setIsLoading","_useContext","useContext","PostsContext","setTotalPosts","localPosts","setLocalPosts","_useSearchParams","useSearchParams","searchParams","_usePaginationParams","usePaginationParams","_usePaginationParams3","page","limit","useEffect","asyncWrapper","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","_iterator","_step","_step$value","key","value","_yield$getNewsFeed","data","headers","wrap","_context","prev","next","_page","_limit","_createForOfIteratorHelper","entries","s","n","done","err","e","f","getNewsFeed","sent","t0","console","error","finish","stop","apply","arguments","LoadingSpinner","formatterInstance","dateOptions","year","hour12","timeZone","date","Date","Intl","DateTimeFormat","formatToParts","reduce","result","type","_defineProperty","SVG","_a","_b","animate","animateBegin","_c","_d","backgroundOpacity","_e","baseUrl","_f","_g","foregroundOpacity","_h","gradientRatio","_j","gradientDirection","uniqueKey","_k","interval","_l","rtl","_m","_o","style","_p","_q","beforeMask","__rest","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","createElement","__assign","role","id","isValidElement","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","begin","ReactContentLoaderFacebook"],"sourceRoot":""}